---
active: False
name: bgp
source:
  regex: (router bgp.*?!)
  grouping:
    name: grouped
    group_by_pattern: ^ neighbor\s(?P<GROUP>(IPV4))\s
    group_by: GROUP
    remove_from_config: True
    transform_cleared_config: False
named_groups:
  IPV4: '(?P<IPV4>(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))'
  NEIGHBOR: '(?P<NEIGHBOR>(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))'
  MASK: '(?P<MASK>(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))'
  REMOTEAS:  '(?P<REMOTEAS>(\d+))'
  TRANSPORT: '(?P<TRANSPORT>(\S+))'
  MULTIHOP:  '(?P<MULTIHOP>(\d+))'
  RID:  '(?P<REMOTEAS>(\d+))'
patterns:
    - name: rid
      pattern: ^router bgp (RID)
    - name: log
      pattern: ^ bgp log-neighbor-changes
    - name: remoteas
      pattern: ^ neighbor (NEIGHBOR) remote-as (REMOTEAS)
      type: dict
    - name: transport
      pattern: ^ neighbor (NEIGHBOR) transport (TRANSPORT)
      type: dict
    - name: multihop
      pattern: ^ neighbor (NEIGHBOR) ebgp-multihop (MULTIHOP)
      type: dict
    - name: default-originate
      pattern: ^ neighbor (NEIGHBOR) default-originate
      type: dict
    - name: network
      pattern: ^ network (IPV4) mask (MASK)
      type: dict
transform: |2
  {
      "remoteas": "{{remoteas.REMOTEAS}}",
      "neighbor": "{{remoteas.NEIGHBOR}}",
      "multihop": "{{multihop.MULTIHOP}}",
      "transport": "{{transport.TRANSPORT}}"
  }
template: |2
  {"global": [{
  {% for bgp in values["cleared"] %}
  {% for value in bgp %}
  "{{value}}":"{{bgp[value]}}"{{ ", " if not loop.last else "" }}
  {%- endfor -%}
  {%- endfor -%}
  }], "neighbors": [
    {% for bgp in values["grouped"] %}
    {%- if 'remoteas' in bgp %}
      {"{{ bgp['neighbor'] }}": {
           "remoteas": {{ bgp['remoteas'] }},
           "ebgp-multihop": {{ bgp['multihop'] }},
           "transport": "{{ bgp['transport'] }}"
      }}{{ ", " if not loop.last else "" }}
  {%- else -%}
  {{ bgp }}
  {%- endif -%}
  {%- endfor -%}
  ]}